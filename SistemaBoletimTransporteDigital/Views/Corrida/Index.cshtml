@using SistemaBoletimTransporteDigital.Enums;
@{
    Layout = "_Layout";
    ViewData["Title"] = "Corridas";
}
@model List<CorridaModel>

<div class="text-center">
    <br />
    <h1 class="display-4">Suas Corridas</h1>
    <br />
</div>

<div class="table-responsive">

    @if (Model != null && Model.Any(corrida => corrida.StatusDaCorrida == StatusCorridaEnum.Iniciada))
    {
        var corrida = Model.FirstOrDefault(c => c.StatusDaCorrida == StatusCorridaEnum.Iniciada);

        <div class="d-grid gap-2 d-md-flex justify-content-md-start">
            <a class="btn btn-danger" role="button">Para Criar uma Corrida Finalize a Iniciada</a>
        </div>

        <br />

        @if (corrida != null)
        {
            <div class="d-grid gap-2 d-md-flex justify-content-md-start">
                <a class="btn btn-warning" role="button" asp-route-id="@corrida.Id" asp-controller="Manutencao" asp-action="CriarManutencao">Criar Manutenção/Avaria do Veículo</a>
            </div>
        }
        
        <br />
       
        @if (corrida != null)
        {
            <div class="d-grid gap-2 d-md-flex justify-content-md-start">
                <a class="btn btn-primary" role="button" asp-route-id="@corrida.Id" asp-controller="Corrida" asp-action="FinalizarCorrida">Finalizar a corrida @corrida.StatusDaCorrida</a>
            </div>
        }

    }
    else
    {
        <div class="d-grid gap-2 d-md-flex justify-content-md-start">
            <a class="btn btn-success" role="button" asp-controller="Corrida" asp-action="CriarCorrida">Criar corrida</a>
        </div>
    }
 
              

    <br />

    @if (TempData["MensagemSucesso"] != null)
    {
        <div class="alert alert-success" role="alert">
           @*  <button type="button" class="btn btn-danger btn-sm close-alert" aria-label="Close">X</button> *@
            @TempData["MensagemSucesso"]
        </div>
    }
    @if (TempData["MensagemErro"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @* <button type="button" class="btn btn-danger btn-sm close-alert" aria-label="Close">X</button> *@
            @TempData["MensagemErro"]
        </div>
    }

    

    <table class="table table-hover" id="table-corrida" style="width:100%">
        <thead>
            <tr>            
                <th scope="col">Descrição da Corrida</th>
                <th scope="col">Inicio</th>
                <th scope="col">Final</th>
                <th scope="col">Veículo</th>
                <th scope="col">Placa</th>
                <th scope="col">Cor</th>
                <th scope="col">KM Inicial</th>
                <th scope="col">KM Final</th>
                <th scope="col">KM Percorrido</th>
                <th scope="col">Status da Corrida</th>
            </tr>
        </thead>
        <tbody>

            @if (Model != null && Model.Any())
            {
                @foreach (CorridaModel corrida in Model)
                {
                    <tr>                      
                        <td>@corrida.DescricaoCorrida</td>
                        <td>@corrida.DataInicioCorrida</td>
                        <td>@corrida.DataFinalCorrida</td>
                        <td>
                            @if (corrida.Veiculo != null)
                            {
                                @corrida.Veiculo.Veiculo
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => corrida.VeiculoID)
                            }
                        </td>
                        <td>
                            @if (corrida.Veiculo != null)
                            {
                                @corrida.Veiculo.Placa
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => corrida.VeiculoID)
                            }
                        </td>
                        <td>
                            @if (corrida.Veiculo != null)
                            {
                                @corrida.Veiculo.Cor
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => corrida.VeiculoID)
                            }
                        </td>
                        <td class="formatted-quilometragem">
                            @corrida.KmInicial
                        </td>
                        <td class="formatted-quilometragem">
                            @corrida.KmFinal
                        </td>
                        <td class="formatted-quilometragem">
                            @corrida.KmPercorrido
                        </td>
                        <td>
                            @if (corrida.StatusDaCorrida != null)
                            {

                                @if (corrida.StatusDaCorrida == StatusCorridaEnum.Finalizada)
                                {
                                    <a class="btn btn-success" role="button">@corrida.StatusDaCorrida</a>
                                }
                                else
                                {
                                    <a class="btn btn-warning" role="button" asp-route-id="@corrida.Id"  asp-controller="Corrida" asp-action="FinalizarCorrida">@corrida.StatusDaCorrida</a>
                                }
                               
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => corrida.Id)
                            }
                        </td>
                    </tr>
                }
            }

        </tbody>
    </table>
</div>

<script>
    // Função para formatar a quilometragem com separadores de milhares
    function formatQuilometragem(quilometragem) {
        return quilometragem.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
    }

    // Seleciona todos os elementos com a classe 'formatted-quilometragem' e formata seus valores
    document.addEventListener('DOMContentLoaded', function () {
        const elementosQuilometragemFormatada = document.querySelectorAll('.formatted-quilometragem');

        elementosQuilometragemFormatada.forEach(function (elemento) {
            const quilometragem = parseFloat(elemento.textContent);
            if (!isNaN(quilometragem)) {
                const quilometragemFormatada = formatQuilometragem(quilometragem);
                elemento.textContent = quilometragemFormatada;
            }
        });
    });
</script>

